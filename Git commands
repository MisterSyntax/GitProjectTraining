git add filename
    add something to staging enviornment

git add .  
    add all files to staging

git add --alll
    push everything to staging regardless of adds or deletes

git add filename
    removes filename and removes filename from staging

git status
    gets status of files

git commit -m "Comment"
    -m for putting a comment
    push the files in staging to the server

git config --global user.email "you@example.com"
git config --global user.name "Your Name"

git log 
    gives the first line of status
    -gives hashes for each commit
    -can use hashes with checkout to checkout 

git checkout filename
    -discards all changes made to file and brings back revision from staging
    -if you delete a file you can use this to bring it back from current staging 

git reset HEAD <file>
    -removes that file from staging

git branch
	-lists all the branches
	
git branch branchName 
	-sets you to branchName
	-or creates the branchName if you're looking at a fork
	
git branch branchName idHashOfBranchFromLog
	-sets the branch id'd from log to have branchName
	
git branch -m branchName newBranchName
	-m = move
	
git branch -D branchName
	-D = delete
	deletes branchName branch

git merge fromBranch
	-merges the changes from fromBranch into current branch
	-ALWAYS run git branch first to check what branch you're in
	
git clone url
	-makes a local copy of the repository
	//After this you'll probably need to run npm install to install the dependencies that are listed in the package.json
	
//Pushing to Remote
git remote add origin remote repository URL
# Sets the new remote
git remote -v
# Verifies the new remote URL
git push origin master
# Pushes the changes in your local repository up to the remote repository you specified as the origin




//GITHUB FILES
.files are invisible

.gitignore
//file which tells what to not upload to github

package.json
node related - keeps tracks of dependencies needed in order to run 